# Generated by Django 3.2.4 on 2021-10-19 20:18

from django.db import migrations

from django.db import migrations
import datetime
import random

def agregar_ingresos(apps, schema_editor):
    Producto = apps.get_model('producto', 'Producto')

    producto1 = Producto.objects.get(nombre='Agua sin gas 0.5L')
    producto2 = Producto.objects.get(nombre='Cerveza Santa Fe 473ml')
    producto3 = Producto.objects.get(nombre='Hamburguesa completa')
    producto4 = Producto.objects.get(nombre='Lomito con papas')
    producto5 = Producto.objects.get(nombre='Pizza 4 Quesos')
    producto6 = Producto.objects.get(nombre='Pizza Especial')

    nuevo_ingreso(apps, 'admin', datetime.date(2020, 5, 1), [producto1, producto2])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 7, 23), [producto2, producto3])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 7, 23), [producto1, producto2, producto3])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 3, 21), [producto3, producto4, producto5])

    nuevo_ingreso(apps, 'martin', datetime.date(2021, 10, 10), [producto5, producto6])
    nuevo_ingreso(apps, 'martin', datetime.date(2021, 10, 11), [producto2, producto4])
    nuevo_ingreso(apps, 'martin', datetime.date(2021, 10, 12), [producto3, producto4, producto5])
    nuevo_ingreso(apps, 'martin', datetime.date(2021, 10, 13), [producto1, producto2, producto3, producto4, producto5, producto6])

    nuevo_ingreso(apps, 'bernardo', datetime.date(2021, 10, 1), [producto5, producto6])
    nuevo_ingreso(apps, 'bernardo', datetime.date(2021, 10, 5), [producto2, producto4])
    nuevo_ingreso(apps, 'bernardo', datetime.date(2021, 10, 10), [producto3, producto4, producto5])
    nuevo_ingreso(apps, 'bernardo', datetime.date(2021, 10, 11), [producto1, producto2, producto3, producto4, producto5, producto6])

    nuevo_ingreso(apps, 'admin', datetime.date(2021, 10, 5), [producto5, producto6])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 10, 7), [producto2, producto4])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 10, 8), [producto3, producto4, producto5])
    nuevo_ingreso(apps, 'admin', datetime.date(2021, 10, 9), [producto1, producto2, producto3, producto4, producto5, producto6])


def nuevo_ingreso(apps, nombre_usuario, fecha, productos):
    Ingreso = apps.get_model('producto', 'Ingreso')
    IngresoLinea = apps.get_model('producto', 'IngresoLinea')
    MovimientoStock = apps.get_model('producto', 'MovimientoStock')
    Usuario = apps.get_model('base', 'Usuario')

    usuario = Usuario.objects.get(username=nombre_usuario)
    ingreso = Ingreso(usuario=usuario, fecha=fecha, total=0,
        auditoria_creado_fecha=datetime.datetime.now(),
        auditoria_modificado_fecha=datetime.datetime.now()
    )
    ingreso.save()

    total = 0
    for producto in productos:
        costo = producto.costo_vigente
        cantidad = random.randint(1, 9)
        totalLinea = costo * cantidad
        total += totalLinea
        linea = IngresoLinea(ingreso=ingreso, producto=producto, cantidad=cantidad, costo=costo, total=totalLinea)
        linea.save()

        id_texto = str(ingreso.id).zfill(5)
        descripcion = "Ingreso I" + id_texto
        movimiento = MovimientoStock(producto=producto, cantidad=cantidad, descripcion=descripcion, ingreso_linea=linea)
        movimiento.save()

        anterior = producto.stock
        producto.stock = anterior + cantidad
        producto.save()

    ingreso.total = total
    ingreso.save()


def borrar_ingresos(apps, schema_editor):
    Ingreso = apps.get_model('producto', 'Ingreso')
    Ingreso.objects.all().delete()

    IngresoLinea = apps.get_model('producto', 'IngresoLinea')
    IngresoLinea.objects.all().delete()

    MovimientoStock = apps.get_model('producto', 'MovimientoStock')
    MovimientoStock.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('producto', '0003_alta_productos'),
    ]

    operations = [
        migrations.RunPython(agregar_ingresos, borrar_ingresos),
    ]
