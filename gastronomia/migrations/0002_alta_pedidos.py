# Generated by Django 3.2.4 on 2021-10-17 16:21
from builtins import super

from django.db import migrations
import datetime

def agregar_pedidos(apps, schema_editor):
    Producto = apps.get_model('producto', 'Producto')

    producto1 = Producto.objects.get(nombre='Agua sin gas 0.5L')
    producto2 = Producto.objects.get(nombre='Cerveza Santa Fe 473ml')
    producto3 = Producto.objects.get(nombre='Hamburguesa completa')
    producto4 = Producto.objects.get(nombre='Lomito con papas')
    producto5 = Producto.objects.get(nombre='Pizza 4 Quesos')
    producto6 = Producto.objects.get(nombre='Pizza Especial')

    nuevo_pedido(apps, 'juan', datetime.date(2020, 5, 1), [producto1, producto2], 'recibido')
    nuevo_pedido(apps, 'juan', datetime.date(2021, 7, 23), [producto2, producto3], 'recibido')
    nuevo_pedido(apps, 'juan', datetime.date(2021, 7, 23), [producto1, producto2, producto3], 'anulado')
    nuevo_pedido(apps, 'juan', datetime.date(2021, 3, 21), [producto3, producto4, producto5], 'recibido')

    nuevo_pedido(apps, 'pedro', datetime.date(2021, 10, 10), [producto5, producto6], 'recibido')
    nuevo_pedido(apps, 'pedro', datetime.date(2021, 10, 11), [producto2, producto4], 'recibido')
    nuevo_pedido(apps, 'pedro', datetime.date(2021, 10, 12), [producto3, producto4, producto5], 'anulado')
    nuevo_pedido(apps, 'pedro', datetime.date(2021, 10, 13), [producto1, producto2, producto3, producto4, producto5, producto6], 'recibido')

    nuevo_pedido(apps, 'comensal', datetime.date(2021, 10, 1), [producto5, producto6], 'recibido')
    nuevo_pedido(apps, 'comensal', datetime.date(2021, 10, 5), [producto2, producto4], 'recibido')
    nuevo_pedido(apps, 'comensal', datetime.date(2021, 10, 10), [producto3, producto4, producto5], 'anulado')
    nuevo_pedido(apps, 'comensal', datetime.date(2021, 10, 11), [producto1, producto2, producto3, producto4, producto5, producto6], 'recibido')

    nuevo_pedido(apps, 'lucas', datetime.date(2021, 10, 5), [producto5, producto6], 'recibido')
    nuevo_pedido(apps, 'lucas', datetime.date(2021, 10, 7), [producto2, producto4], 'recibido')
    nuevo_pedido(apps, 'lucas', datetime.date(2021, 10, 8), [producto3, producto4, producto5], 'anulado')
    nuevo_pedido(apps, 'lucas', datetime.date(2021, 10, 9), [producto1, producto2, producto3, producto4, producto5, producto6], 'recibido')


def nuevo_pedido(apps, nombre_usuario, fecha, productos, estadoTexto):
    Pedido = apps.get_model('gastronomia', 'Pedido')
    Estado = apps.get_model('gastronomia', 'Estado')
    PedidoLinea = apps.get_model('gastronomia', 'PedidoLinea')
    Usuario = apps.get_model('base', 'Usuario')

    usuario = Usuario.objects.get(username=nombre_usuario)
    pedido = Pedido(usuario=usuario, fecha=fecha, tipo='online', ultimo_estado=estadoTexto, total=0,
        forzar=0, auditoria_creado_fecha=datetime.datetime.now(),
        auditoria_modificado_fecha=datetime.datetime.now()
    )
    pedido.save()

    estado = Estado(pedido=pedido, estado=estadoTexto, fecha=fecha)
    estado.save()

    pedido.estados.add(estado)
    pedido.save()

    total = 0
    for producto in productos:
        subtotalLinea = producto.precio_vigente
        totalLinea = subtotalLinea * 2
        total += totalLinea
        linea = PedidoLinea(pedido=pedido, producto=producto, cantidad=2, subtotal=subtotalLinea, total=totalLinea)
        linea.save()

    pedido.total = total
    pedido.save()


def borrar_pedidos(apps, schema_editor):
    Estado = apps.get_model('gastronomia', 'Estado')
    Estado.objects.all().delete()

    PedidoLinea = apps.get_model('gastronomia', 'PedidoLinea')
    PedidoLinea.objects.all().delete()

    Pedido = apps.get_model('gastronomia', 'Pedido')
    Pedido.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('gastronomia', '0001_initial'),
        ('producto', '0004_alta_productos'),
        ('base', '0003_usuarios'),
    ]

    operations = [
        migrations.RunPython(agregar_pedidos, borrar_pedidos),
    ]
